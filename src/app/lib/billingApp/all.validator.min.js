/*! angularjsappl - v1.0.0 - 2016-09-11 */!function(){"use strict";function ChargeDetailValidator(){function validate(form){function mandatory(){(angular.isUndefined(form.chargeId)||""==form.chargeId)&&validationMessages.push("Charge Id can not be empty."),(angular.isUndefined(form.chargeType)||""==form.chargeType)&&validationMessages.push("Charge Type can not be empty.")}function init(){mandatory()}var validationMessages=[];return init(),{validationMessages:validationMessages,success:!(validationMessages.length>0)}}var validator={};return validator.validate=validate,validator}angular.module("billingApp").factory("ChargeDetailValidator",ChargeDetailValidator)}(),function(){"use strict";function ChargeValidator(){function validate(form){function mandatory(){(angular.isUndefined(form.chargeId)||""==form.chargeId)&&validationMessages.push("Charge Id can not be empty."),(angular.isUndefined(form.chargeName)||""==form.chargeName)&&validationMessages.push("Charge Name can not be empty.")}function init(){mandatory()}var validationMessages=[];return init(),{validationMessages:validationMessages,success:!(validationMessages.length>0)}}var validator={};return validator.validate=validate,validator}angular.module("billingApp").factory("ChargeValidator",ChargeValidator)}(),function(){"use strict";function ClientValidator(){function validate(form){function mandatory(){var model=form;""===model.name&&validationMessages.push("Client name sholud not be empty"),""===model.clientId&&validationMessages.push("Client Id sholud not be empty"),""===model.password&&validationMessages.push("Password should not be empty."),""===model.confirmPassword&&validationMessages.push("Confirm Password should not be empty."),angular.equals(model.password,model.confirmPassword)||validationMessages.push("Password and Confirm Password should be same."),""===model.ipAddress&&validationMessages.push("IP Address should not be empty."),""===model.macAddress&&validationMessages.push("MAC Address should not be empty.")}function init(){mandatory()}var validationMessages=[];return init(),{validationMessages:validationMessages,success:!(validationMessages.length>0)}}var validator={};return validator.validate=validate,validator}angular.module("billingApp").factory("ClientValidator",ClientValidator)}(),function(){"use strict";function SchemeAssignmentValidator(){function validate(form){function mandatory(){(angular.isUndefined(form.schemeId)||""==form.schemeId)&&validationMessages.push("Scheme Id can not be empty."),(angular.isUndefined(form.schemeStartDate)||""==form.schemeStartDate)&&validationMessages.push("Scheme Start Date can not be empty.")}function init(){mandatory()}var validationMessages=[];return init(),{validationMessages:validationMessages,success:!(validationMessages.length>0)}}var validator={};return validator.validate=validate,validator}angular.module("billingApp").factory("SchemeAssignmentValidator",SchemeAssignmentValidator)}(),function(){"use strict";function SchemeValidator(){function validate(form){function mandatory(){(angular.isUndefined(form.schemeId)||""==form.schemeId)&&validationMessages.push("Scheme Id can not be empty."),(angular.isUndefined(form.schemeName)||""==form.schemeName)&&validationMessages.push("Scheme Name can not be empty.")}function init(){mandatory()}var validationMessages=[];return init(),{validationMessages:validationMessages,success:!(validationMessages.length>0)}}var validator={};return validator.validate=validate,validator}angular.module("billingApp").factory("SchemeValidator",SchemeValidator)}();