/*! angularjsappl - v1.0.0 - 2016-08-17 */!function(){"use strict";function ChargeDetailsController($scope,$http,growl,charges,SchemeValidator,DbActionHandler,DropdownConfig,$timeout,$controller,$uibModalInstance){var vm=this;vm.form={},vm.form.charges=charges,vm.ok=function(){var selectedChargeId=vm.form.charges[vm.form.selectedIndex];$uibModalInstance.close(selectedChargeId.chargeId)},vm.cancel=function(){$uibModalInstance.dismiss("cancel")},vm.selectCharge=function(index){alert("in selection controller.."),vm.form.selectedIndex=index,vm.ok()}}angular.module("billingApp").controller("ChargeDetailsController",ChargeDetailsController)}(),function(){"use strict";function ChargeEntryController($scope,$http,growl,ChargeValidator,DbActionHandler,DropdownConfig,$timeout,$controller){var vm=this;vm.form={},angular.extend(vm,$controller("AbstractEntryController",{$scope:vm,DbActionHandler:DbActionHandler,validator:ChargeValidator,growl:growl,entryScreenName:"Charge Entry",confirmUrl:"/confirmChargeForm"})),vm.init=function(argument){vm.headerName="Charge Entry",vm.form.chargeName=void 0,vm.form.chargeId=void 0,vm.form.chargeCcy=void 0,vm.form.chargeTimeBasis=void 0,vm.form.chargeAmt=void 0,vm.chargeTimeBasisValues=DropdownConfig.dropdown.charge.entry.chargeTimeBasis,vm.EditMode=!0},vm.init()}angular.module("billingApp").controller("ChargeEntryController",ChargeEntryController)}(),function(){"use strict";function ChargeQueryController($scope,$http,$filter,$controller,PaginationService,growl,$timeout){var vm=this;vm.queryForm={},vm.pager={},angular.extend(vm,$controller("AbstractQueryController",{$scope:vm,$http:$http,$timeout:$timeout,PaginationService:PaginationService,entityFetchUrl:"getCharges"})),vm.initQuery=function(){vm.headerName="Charge Query",vm.queryForm.chargeName=void 0,vm.queryForm.chargeId=void 0,vm.queryForm.chargeCcy=void 0,vm.queryForm.chargeTimeBasis=void 0,vm.disableQueryResult(),vm.initGrid()},vm.initGrid=function(){vm.getGridOptions();var gridCols=[{field:"chargeName",displayName:"Charge Name"},{field:"chargeId",displayName:"Charge Id"},{field:"chargeCcy",displayName:"Charge Ccy"},{field:"chargeTimeBasis",displayName:"Charge Time Basis"},{field:"chargeAmt",displayName:"Charge Amount"}];vm.dataGridOptions.columnDefs=gridCols},vm.createNgetEntity=function(){var charge={};return""!==vm.queryForm.chargeName&&(charge.chargeName=vm.queryForm.chargeName),""!==vm.queryForm.chargeId&&(charge.chargeId=vm.queryForm.chargeId),""!==vm.queryForm.chargeCcy&&(charge.chargeCcy=vm.queryForm.chargeCcy),""!==vm.queryForm.chargeTimeBasis&&(charge.chargeTimeBasis=vm.queryForm.chargeTimeBasis),charge},vm.initQuery()}angular.module("billingApp").controller("ChargeQueryController",ChargeQueryController)}(),function(){"use strict";function ClientEntryController($scope,$http,growl,ClientValidator,DbActionHandler,DropdownConfig,DatepickerConfig,$timeout,$controller){var vm=this,form={};vm.form=form,angular.extend(vm,$controller("AbstractEntryController",{$scope:vm,DbActionHandler:DbActionHandler,validator:ClientValidator,growl:growl,entryScreenName:"Client Entry",confirmUrl:"/confirmForm"})),vm.init=function(){vm.headerName="Client Entry",vm.form.name="",vm.form.clientId="",vm.form.password="",vm.form.confirmPassword="",vm.form.ipAddress="",vm.form.macAddress="",vm.form.dt="",vm.uidTypes=DropdownConfig.dropdown.client.entry.uidTypes,vm.clientTypes=DropdownConfig.dropdown.client.entry.clientTypes,vm.form.uidType="",vm.form.uidNumber="",vm.form.clientAge="",vm.form.clientType="",vm.EditMode=!0},vm.init(),vm.dateOptions=DatepickerConfig.dateOptions,vm.format=DatepickerConfig.format,vm.DobPopup={opened:!1},vm.openDobPopup=function(){vm.DobPopup.opened=!0}}angular.module("billingApp").controller("ClientEntryController",ClientEntryController)}(),function(){"use strict";function ClientQueryController($scope,$http,$filter,PaginationService,growl,$timeout){var vm=this;vm.queryForm={},vm.pager={},vm.initQuery=function(){vm.headerName="Client Query",vm.queryForm.name=void 0,vm.queryForm.clientId=void 0,vm.queryForm.ipAddress=void 0,vm.queryForm.macAddress=void 0,vm.disableQueryResult(),vm.initGrid()},vm.disableQueryResult=function(){vm.enabledCustInq=!1},vm.enableQueryResult=function(){vm.enabledCustInq=!0},vm.initGrid=function(){vm.dataGridOptions={enableFiltering:!0,enableGridMenu:!0,enableSelectAll:!0,exporterCsvFilename:"clients.csv",exporterCsvLinkElement:angular.element(document.querySelectorAll(".custom-csv-link-location")),exporterMenuPdf:!1,onRegisterApi:function(gridApi){vm.gridApi=gridApi},data:[]};var gridCols=[{field:"name",displayName:"Client Name"},{field:"clientId",displayName:"Client Id"},{field:"uidType",displayName:"UID Type"},{field:"uidNumber",displayName:"UID Number"},{field:"dt",displayName:"DOB"},{field:"ipAddress",displayName:"IP Address"},{field:"macAddress",displayName:"MAC Address"}];vm.dataGridOptions.columnDefs=gridCols},vm.initQuery(),vm.initPagination=function(){var pager=PaginationService.getPager(5,vm.clients.length);vm.pager=pager,vm.currentPage=1,vm.totalPages=pager.totalPages,vm.recordPerPage=pager.recordPerPage,vm.dataGridOptions.data=vm.clients.slice(vm.pager.getStartIndex(),vm.pager.getEndIndex())},vm.createNgetClient=function(){var client={};return""!==vm.queryForm.name&&(client.name=vm.queryForm.name),""!==vm.queryForm.clientId&&(client.clientId=vm.queryForm.clientId),""!==vm.queryForm.ipAddress&&(client.ipAddress=vm.queryForm.ipAddress),""!==vm.queryForm.macAddress&&(client.macAddress=vm.queryForm.macAddress),client},vm.customerInquery=function(){vm.enableQueryResult(),vm.fetchResult()},vm.fetchResult=function(){$http.post("/getClients",vm.createNgetClient()).success(function(data){$timeout(function(){vm.clients=data,vm.initPagination()})})}}angular.module("billingApp").controller("ClientQueryController",ClientQueryController)}(),function(){"use strict";function DashboardController($scope,$http,growl,$timeout,$state,$interval,$uibModal,$log){var vm=this;vm.labels=[],vm.data=[],vm.getReqData=function(dt){var client={};return client.name=dt,client};var y=function(){if(vm.temp.length>0){vm.data=[],vm.labels=[];for(var i=0;i<vm.temp.length;i++){var clientType=vm.temp[i]._id.clientType;vm.data.push(vm.temp[i].count),vm.labels.push(null===clientType?"Not mentioned":clientType)}}},x=function(){vm.temp=[],$http.post("/getCounts",vm.getReqData("sofikul")).success(function(clients){angular.isDefined(clients)&&(vm.temp=clients)}),$http.post("/getClientsCount",vm.getReqData("sofikul")).success(function(clientsCount){angular.isDefined(clientsCount)&&(vm.clientsCount=clientsCount)}),$http.post("/getChargesCount",vm.getReqData("sofikul")).success(function(chargesCount){angular.isDefined(chargesCount)&&(vm.chargesCount=chargesCount)})};x(),y(),$interval(x,12e3),$interval(y,15e3),vm.hzBarChart={},vm.hzBarChart.labels=["2006","2007","2008","2009","2010","2011","2012"],vm.hzBarChart.series=["Series A","Series B"],vm.hzBarChart.data=[[65,59,80,81,56,55,40],[28,48,40,19,86,27,90]],vm.items=["item1","item2","item3"],$scope.open=function(size){var modalInstance=$uibModal.open({animation:!0,templateUrl:"myModalContent.html",controller:"ModalInstanceCtrl",size:size,resolve:{items:function(){return vm.items}}});modalInstance.result.then(function(selectedItem){vm.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})}}angular.module("billingApp").controller("DashboardController",DashboardController)}(),angular.module("billingApp").controller("ModalInstanceCtrl",function($scope,$uibModalInstance,items){$scope.items=items,$scope.selected={item:$scope.items[0]},$scope.ok=function(){$uibModalInstance.close($scope.selected.item)},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}),function(){"use strict";function LogInController($scope,$http,growl,$timeout,$state,$rootScope,$stateParams,LoginService,UserService){var vm=this;vm.userName=void 0,vm.userPassword=void 0,vm.userRole=void 0,vm.loginHandler=function(){LoginService.validate({userName:vm.userName,userPassword:vm.userPassword,userRole:vm.userRole}),$rootScope.$on("loginFailure",function(event,data){alert("Hey "+data.user+"! You are not a valid user.\nPlease check your credentials")})}}angular.module("billingApp").controller("LogInController",LogInController)}(),function(){function MenuController($state,$rootScope,UserService){var vm=this;vm.header="Menu Items",vm.loggedInUser=UserService.getLoggedInUser().name,vm.menuList=[{name:"Client Management",link:"#",subMenu:[{name:"Client Entry",link:"/clientEntry"},{name:"Client Amend",link:"/clientAmend"},{name:"Client Cancel",link:"/clientCancel"}]},{name:"Sys Controll",link:"/sysControll",subMenu:[]}],vm.redirectToLogIn=function(){$state.go("login")},$rootScope.$on("unAuthorizedAccess",function(data){alert("You don't have permission to access this.")}),vm.expireSession=function(){UserService.expireSession(),$state.go("login")}}angular.module("billingApp").controller("menuCtrl",MenuController)}(),function(){"use strict";function SchemeEntryController($scope,$http,$log,growl,SchemeValidator,DbActionHandler,DropdownConfig,$timeout,$controller,$uibModal){var vm=this;vm.form={},angular.extend(vm,$controller("AbstractEntryController",{$scope:vm,DbActionHandler:DbActionHandler,validator:SchemeValidator,growl:growl,entryScreenName:"Scheme Entry",confirmUrl:"/confirmSchemeForm"})),vm.init=function(argument){vm.headerName="Scheme Entry",vm.form.chargeId=void 0,vm.form.schemeId=void 0,vm.form.schemeName=void 0,vm.chargeTypes=DropdownConfig.dropdown.scheme.entry.chargeTypes,vm.form.chargeType=void 0,vm.EditMode=!0,vm.entries=[],$http.post("/getCharges",{}).success(function(d){$timeout(function(){vm.charges=d})})},vm.AddEntry=function(){var entry={};entry.chargeType=vm.form.chargeType,entry.chargeId=vm.form.chargeId,entry.makeEntryEditable=!1,vm.entries.push(entry),vm.clearForm()},vm.makeEditable=function(index){var entry=vm.entries[index];entry.makeEntryEditable=!0},vm.SaveUpdate=function(index){var entry=vm.entries[index];entry.makeEntryEditable=!1},vm.CancelUpdate=function(index){var entry=vm.entries[index];entry.makeEntryEditable=!1},vm.RemoveEntry=function(index){vm.entries.splice(index,1)},vm.clearForm=function(){vm.form.chargeId=null,vm.form.chargeType=null},vm.open=function(size){var modalInstance=$uibModal.open({templateUrl:"modules/scheme/views/partials/ChargeDetails.html",controller:"ChargeDetailsController",controllerAs:"chargeDetails",resolve:{charges:function(){return vm.charges}}});modalInstance.result.then(function(selectedChargeId){vm.selectedChargeId=selectedChargeId,vm.form.chargeId=vm.selectedChargeId},function(){$log.info("Modal dismissed at: "+new Date)})},vm.init()}angular.module("billingApp").controller("SchemeEntryController",SchemeEntryController)}();